/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.RotaController;
import controller.VeiculoController;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Rota;
import model.Veiculo;

/**
 *
 * @author Senai
 */
public class TelaRota extends javax.swing.JInternalFrame {

    RotaController rotaController;
    ArrayList<Rota> listaRota;
    Rota rota;

    /**
     * Creates new form TelaRota
     */
    public TelaRota() {
        initComponents();
        setModelo();
        limpaCampos();
        rotaController = new RotaController();
        listaRota();
        this.setSize(530, 470);
        this.setLocation(80, 320);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtSaida = new javax.swing.JTextField();
        txtDestino = new javax.swing.JTextField();
        txtDistanciaPercorrida = new javax.swing.JTextField();
        txtGastosExtras = new javax.swing.JTextField();
        btnCadastrar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCadastro = new javax.swing.JTable();
        btnExcluir = new javax.swing.JButton();

        setClosable(true);
        setTitle("Cadastro de Rotas");
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel1.setText("     Cadastros de Rotas");
        jLabel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        getContentPane().add(jLabel1);
        jLabel1.setBounds(140, 10, 180, 33);

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel3.setText("Local de saída:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(80, 90, 110, 12);

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel4.setText("Destino:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(80, 130, 60, 16);

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel5.setText("Distância Percorrida:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(80, 170, 140, 16);

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel6.setText("Gastos Extras:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(80, 210, 96, 16);

        txtSaida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSaidaKeyTyped(evt);
            }
        });
        getContentPane().add(txtSaida);
        txtSaida.setBounds(240, 80, 160, 30);

        txtDestino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDestinoKeyTyped(evt);
            }
        });
        getContentPane().add(txtDestino);
        txtDestino.setBounds(240, 120, 160, 30);

        txtDistanciaPercorrida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDistanciaPercorridaActionPerformed(evt);
            }
        });
        txtDistanciaPercorrida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDistanciaPercorridaKeyTyped(evt);
            }
        });
        getContentPane().add(txtDistanciaPercorrida);
        txtDistanciaPercorrida.setBounds(240, 160, 160, 30);

        txtGastosExtras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGastosExtrasKeyTyped(evt);
            }
        });
        getContentPane().add(txtGastosExtras);
        txtGastosExtras.setBounds(240, 200, 160, 30);

        btnCadastrar.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCadastrarMouseClicked(evt);
            }
        });
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCadastrar);
        btnCadastrar.setBounds(260, 250, 100, 30);

        btnLimpar.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpar);
        btnLimpar.setBounds(130, 250, 79, 30);

        tblCadastro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblCadastro);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(31, 304, 452, 90);

        btnExcluir.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        getContentPane().add(btnExcluir);
        btnExcluir.setBounds(400, 400, 80, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDistanciaPercorridaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDistanciaPercorridaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDistanciaPercorridaActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        limpaCampos();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        addRota();
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        deleteRota();
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void txtSaidaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaidaKeyTyped
        if (evt.getKeyChar() == 10) {
            txtDestino.grabFocus();
        }
    }//GEN-LAST:event_txtSaidaKeyTyped

    private void txtDestinoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDestinoKeyTyped
        if (evt.getKeyChar() == 10) {
            txtDistanciaPercorrida.grabFocus();
        }
    }//GEN-LAST:event_txtDestinoKeyTyped

    private void txtDistanciaPercorridaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDistanciaPercorridaKeyTyped
        if (evt.getKeyChar() == 10) {
            txtGastosExtras.grabFocus();
        }
    }//GEN-LAST:event_txtDistanciaPercorridaKeyTyped

    private void txtGastosExtrasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGastosExtrasKeyTyped
        if (evt.getKeyChar() == 10) {
            btnCadastrar.grabFocus();
        }
    }//GEN-LAST:event_txtGastosExtrasKeyTyped

    private void btnCadastrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCadastrarMouseClicked
   
    }//GEN-LAST:event_btnCadastrarMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCadastro;
    private javax.swing.JTextField txtDestino;
    private javax.swing.JTextField txtDistanciaPercorrida;
    private javax.swing.JTextField txtGastosExtras;
    private javax.swing.JTextField txtSaida;
    // End of variables declaration//GEN-END:variables

    DefaultTableModel modelo;

    private void setModelo() {

        modelo = new DefaultTableModel();
        modelo.addColumn("rotaId");
        modelo.addColumn("saida");
        modelo.addColumn("destino");
        modelo.addColumn("distanciaPercorrida");
        modelo.addColumn("gastosExtras");
        tblCadastro.setModel(modelo);

    }

    private void addRota() {

        /*if (txtRotaId.getText().equals("")) {
         JOptionPane.showMessageDialog(null, "Campo RotaId Invalido");
         txtRotaId.grabFocus();
         return;
         } else */ if (txtSaida.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Campo Saida Invalido");
            txtSaida.grabFocus();
            return;
        } else if (txtDestino.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Campo Destino Invalido");
            txtDestino.grabFocus();
            return;
        } else if (txtDistanciaPercorrida.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Campo Distancia percorrida Invalido");
            txtDistanciaPercorrida.grabFocus();
            return;
        } else if (txtGastosExtras.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Campo Gastos Extras Invalido");
            txtGastosExtras.grabFocus();
            return;
        }
        if (rota == null) {
            rota = new Rota();
        }

        //rota.setRotaId(Integer.parseInt(txtRotaId.getText()));
        rota.setSaida(txtSaida.getText());
        rota.setDestino(txtDestino.getText());
        rota.setDistanciaPercorrida(txtDistanciaPercorrida.getText());
        rota.setGastosExtras(txtGastosExtras.getText());
        if (rotaController.insereRota(rota)) {
            insereTabela(rota);
            limpaCampos();
            listaRota();
        }
    }

    public void insereTabela(Rota rota) {
        Object[] linha = new Object[10];
        linha[0] = rota.getRotaId();
        linha[1] = rota.getSaida();
        linha[2] = rota.getDestino();
        linha[3] = rota.getDistanciaPercorrida();
        linha[4] = rota.getGastosExtras();
        modelo.addRow(linha);
    }

    public void listaRota() {
        setModelo();
        ArrayList<Rota> lista;
        lista = rotaController.getRota();
        for (int x = 0; x < lista.size(); x++) {
            Rota ro = lista.get(x);
            insereTabela(ro);
        }
        listaRota = lista;
    }

    private void limpaCampos() {
        rota = null;

        txtSaida.setText("");
        txtDestino.setText("");
        txtDistanciaPercorrida.setText("");
        txtGastosExtras.setText("");
    }

    private int pegaIdSelecionado() {
        int linha = tblCadastro.getSelectedRow();
        return Integer.parseInt(modelo.getValueAt(linha, 0).toString());
    }

    private void deleteRota() {
        int numero = pegaIdSelecionado();
        String id = null;
        JOptionPane.showMessageDialog(null, "Deletando rota de nome: " + id);
        rotaController.deleteRota(numero);
        listaRota();
    }

    private void carregaRota() {
        int id = pegaIdSelecionado();
        for (int x = 0; x < listaRota.size(); x++) {
            Rota ro = listaRota.get(x);
            if (id == ro.getRotaId()) {

                txtSaida.setText(ro.getSaida());
                txtDestino.setText(ro.getDestino());
                txtDistanciaPercorrida.setText(ro.getDistanciaPercorrida());
                txtGastosExtras.setText(ro.getGastosExtras());
                rota = ro;
                break;
            }
        }
    }

}
